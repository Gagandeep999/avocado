[equalequal, ==, 1] [plus, +, 1] [openround, (, 1] [if, if, 1] [do, do, 1] 
[notequal, <>, 2] [minus, -, 2] [closeround, ), 2] [then, then, 2] [end, end, 2] 
[lessthan, <, 3] [multiply, *, 3] [opencurly, {, 3] [else, else, 3] [public, public, 3] 
[greaterthan, >, 4] [divide, /, 4] [closecurly, }, 4] [while, while, 4] [private, private, 4] 
[lessthanequal, <=, 5] [equal, =, 5] [opensquare, [, 5] [class, class, 5] [or, or, 5] 
[greaterthanequal, >=, 6] [closesquare, ], 6] [integer, integer, 6] [and, and, 6] 
[semicolon, ;, 7] [float, float, 7] [not, not, 7] 
[comma, ,, 8] [read, read, 8] [inherits, inherits, 8] 
[period, ., 9] [write, write, 9] [local, local, 9] 
[colon, :, 10] [return, return, 10] 
[coloncolon, ::, 11] [main, main, 11] 

[intnum, 0, 13] 
[intnum, 1, 14] 
[intnum, 10, 15] 
[intnum, 12, 16] 
[intnum, 123, 17] 
[intnum, 12345, 18] 

[float, 1.23, 20] 
[float, 12.34, 21] 

[float, 12345.6789e-123, 23] 

[id, abc, 25] 
[id, abc1, 26] 
[id, a1bc, 27] 
[id, abc_1abc, 28] 
[id, abc1_abc_1abc, 29] 

[blockcmnt, /* this is a single line block comment */, 31] 

[blockcmnt, /* this is a \n\nmultiple line\n\nblock comment \n\n*/, 33] 

[inlinecmnt, // this is an inline comment, 35] 


