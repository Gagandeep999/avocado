[inlinecmnt, // ====== Class declarations ====== //, 1] 
[class, class, 2] [id, POLYNOMIAL, 2] [lcurbr, {, 2] 
[public, public, 3] [id, evaluate, 3] [lpar, (, 3] [float, float, 3] [id, x, 3] [rpar, ), 3] [colon, :, 3] [float, float, 3] [semi, ;, 3] 
[rcurbr, }, 4] [semi, ;, 4] 

[class, class, 6] [id, LINEAR, 6] [inherits, inherits, 6] [id, POLYNOMIAL, 6] [lcurbr, {, 6] 
[private, private, 7] [float, float, 7] [id, a, 7] [semi, ;, 7] 
[private, private, 8] [float, float, 8] [id, b, 8] [semi, ;, 8] 

[public, public, 10] [id, build, 10] [lpar, (, 10] [float, float, 10] [id, A, 10] [comma, ,, 10] [float, float, 10] [id, B, 10] [rpar, ), 10] [colon, :, 10] [id, LINEAR, 10] [semi, ;, 10] 
[public, public, 11] [id, evaluate, 11] [lpar, (, 11] [float, float, 11] [id, x, 11] [rpar, ), 11] [colon, :, 11] [float, float, 11] [semi, ;, 11] 
[rcurbr, }, 12] [semi, ;, 12] 

[class, class, 14] [id, QUADRATIC, 14] [inherits, inherits, 14] [id, POLYNOMIAL, 14] [lcurbr, {, 14] 
[private, private, 15] [float, float, 15] [id, a, 15] [semi, ;, 15] 
[private, private, 16] [float, float, 16] [id, b, 16] [semi, ;, 16] 
[private, private, 17] [float, float, 17] [id, c, 17] [semi, ;, 17] 

[public, public, 19] [id, build, 19] [lpar, (, 19] [float, float, 19] [id, A, 19] [comma, ,, 19] [float, float, 19] [id, B, 19] [comma, ,, 19] [float, float, 19] [id, C, 19] [rpar, ), 19] [colon, :, 19] [id, QUADRATIC, 19] [semi, ;, 19] 
[public, public, 20] [id, evaluate, 20] [lpar, (, 20] [float, float, 20] [id, x, 20] [rpar, ), 20] [colon, :, 20] [float, float, 20] [semi, ;, 20] 
[rcurbr, }, 21] [semi, ;, 21] 

[inlinecmnt, // ====== Function Definitions ====== //, 23] 
[id, POLYNOMIAL, 24] [sr, ::, 24] [id, evaluate, 24] [lpar, (, 24] [float, float, 24] [id, x, 24] [rpar, ), 24] [colon, :, 24] [float, float, 24] 
[do, do, 25] 
[return, return, 26] [lpar, (, 26] [intnum, 0, 26] [rpar, ), 26] [semi, ;, 26] 
[end, end, 27] [semi, ;, 27] 

[id, LINEAR, 29] [sr, ::, 29] [id, evaluate, 29] [lpar, (, 29] [float, float, 29] [id, x, 29] [rpar, ), 29] [colon, :, 29] [float, float, 29] 
[local, local, 30] 
[float, float, 31] [id, result, 31] [semi, ;, 31] 
[do, do, 32] 
[id, result, 33] [equal, =, 33] [floatnum, 0.0, 33] [semi, ;, 33] 
[id, result, 34] [equal, =, 34] [id, a, 34] [mult, *, 34] [id, x, 34] [plus, +, 34] [id, b, 34] [semi, ;, 34] 
[return, return, 35] [lpar, (, 35] [id, result, 35] [rpar, ), 35] [semi, ;, 35] 
[end, end, 36] [semi, ;, 36] 

[id, QUADRATIC, 38] [sr, ::, 38] [id, evaluate, 38] [lpar, (, 38] [float, float, 38] [id, x, 38] [rpar, ), 38] [colon, :, 38] [float, float, 38] 
[local, local, 39] 
[float, float, 40] [id, result, 40] [semi, ;, 40] 
[do, do, 41] [inlinecmnt, //Using Horner's method, 41] 
[id, result, 42] [equal, =, 42] [id, a, 42] [semi, ;, 42] 
[id, result, 43] [equal, =, 43] [id, result, 43] [mult, *, 43] [id, x, 43] [plus, +, 43] [id, b, 43] [semi, ;, 43] 
[id, result, 44] [equal, =, 44] [id, result, 44] [mult, *, 44] [id, x, 44] [plus, +, 44] [id, c, 44] [semi, ;, 44] 
[return, return, 45] [lpar, (, 45] [id, result, 45] [rpar, ), 45] [semi, ;, 45] 
[end, end, 46] [semi, ;, 46] 

[id, LINEAR, 48] [sr, ::, 48] [id, build, 48] [lpar, (, 48] [float, float, 48] [id, A, 48] [comma, ,, 48] [float, float, 48] [id, B, 48] [rpar, ), 48] [colon, :, 48] [id, LINEAR, 48] 
[local, local, 49] 
[id, LINEAR, 50] [id, new_function, 50] [semi, ;, 50] 
[do, do, 51] 
[id, new_function, 52] [dot, ., 52] [id, a, 52] [equal, =, 52] [id, A, 52] [semi, ;, 52] 
[id, new_function, 53] [dot, ., 53] [id, b, 53] [equal, =, 53] [id, B, 53] [semi, ;, 53] 
[return, return, 54] [lpar, (, 54] [id, new_function, 54] [rpar, ), 54] [semi, ;, 54] 
[end, end, 55] [semi, ;, 55] 

[id, QUADRATIC, 57] [sr, ::, 57] [id, build, 57] [lpar, (, 57] [float, float, 57] [id, A, 57] [comma, ,, 57] [float, float, 57] [id, B, 57] [comma, ,, 57] [float, float, 57] [id, C, 57] [rpar, ), 57] [colon, :, 57] [id, QUADRATIC, 57] 
[local, local, 58] 
[id, QUADRATIC, 59] [id, new_function, 59] [semi, ;, 59] 
[do, do, 60] 
[id, new_function, 61] [dot, ., 61] [id, a, 61] [equal, =, 61] [id, A, 61] [semi, ;, 61] 
[id, new_function, 62] [dot, ., 62] [id, b, 62] [equal, =, 62] [id, B, 62] [semi, ;, 62] 
[id, new_function, 63] [dot, ., 63] [id, c, 63] [equal, =, 63] [id, C, 63] [semi, ;, 63] 
[return, return, 64] [lpar, (, 64] [id, new_function, 64] [rpar, ), 64] [semi, ;, 64] 
[end, end, 65] [semi, ;, 65] 


[inlinecmnt, // ====== main ====== //, 68] 
[main, main, 69] 
[local, local, 70] 
[id, linear, 71] [id, f1, 71] [semi, ;, 71] 
[id, quadratic, 72] [id, f2, 72] [semi, ;, 72] 
[integer, integer, 73] [id, counter, 73] [semi, ;, 73] 
[do, do, 74] 
[id, f1, 75] [equal, =, 75] [id, f1, 75] [dot, ., 75] [id, build, 75] [lpar, (, 75] [intnum, 2, 75] [comma, ,, 75] [floatnum, 3.5, 75] [rpar, ), 75] [semi, ;, 75] 
[id, f2, 76] [equal, =, 76] [id, f2, 76] [dot, ., 76] [id, build, 76] [lpar, (, 76] [floatnum, 2.0, 76] [comma, ,, 76] [floatnum, 1.0, 76] [comma, ,, 76] [floatnum, 0.0, 76] [rpar, ), 76] [semi, ;, 76] 
[id, counter, 77] [equal, =, 77] [intnum, 1, 77] [semi, ;, 77] 

[while, while, 79] [lpar, (, 79] [id, counter, 79] [leq, <=, 79] [intnum, 10, 79] [rpar, ), 79] 
[do, do, 80] 
[write, write, 81] [lpar, (, 81] [id, counter, 81] [rpar, ), 81] [semi, ;, 81] 
[write, write, 82] [lpar, (, 82] [id, f1, 82] [dot, ., 82] [id, evaluate, 82] [lpar, (, 82] [id, counter, 82] [rpar, ), 82] [rpar, ), 82] [semi, ;, 82] 
[write, write, 83] [lpar, (, 83] [id, f2, 83] [dot, ., 83] [id, evaluate, 83] [lpar, (, 83] [id, counter, 83] [rpar, ), 83] [rpar, ), 83] [semi, ;, 83] 
[end, end, 84] [semi, ;, 84] 
[end, end, 85] [semi, ;, 85] 