[inlinecmnt, // comments /* nested comments */, 1] 
[blockcmnt, /* starting comment // nested comment */, 2] 


[inlinecmnt, // ====== Class declarations ====== //, 5] 
[class, class, 6] [id, POLYNOMIAL, 6] [lcurbr, {, 6] 
[public, public, 7] [id, evaluate, 7] [lpar, (, 7] [integer, integer, 7] [id, x, 7] [rpar, ), 7] [colon, :, 7] [integer, integer, 7] [semi, ;, 7] 
[rcurbr, }, 8] [semi, ;, 8] 

[class, class, 10] [id, LINEAR, 10] [inherits, inherits, 10] [id, POLYNOMIAL, 10] [lcurbr, {, 10] 
[private, private, 11] [integer, integer, 11] [id, a, 11] [semi, ;, 11] 
[private, private, 12] [integer, integer, 12] [id, b, 12] [semi, ;, 12] 

[public, public, 14] [id, build, 14] [lpar, (, 14] [integer, integer, 14] [id, A, 14] [comma, ,, 14] [integer, integer, 14] [id, B, 14] [rpar, ), 14] [colon, :, 14] [id, LINEAR, 14] [semi, ;, 14] 
[public, public, 15] [id, evaluate, 15] [lpar, (, 15] [integer, integer, 15] [id, x, 15] [rpar, ), 15] [colon, :, 15] [integer, integer, 15] [semi, ;, 15] 
[rcurbr, }, 16] [semi, ;, 16] 

[class, class, 18] [id, QUADRATIC, 18] [inherits, inherits, 18] [id, POLYNOMIAL, 18] [lcurbr, {, 18] 
[private, private, 19] [integer, integer, 19] [id, a, 19] [semi, ;, 19] 
[private, private, 20] [integer, integer, 20] [id, b, 20] [semi, ;, 20] 
[private, private, 21] [integer, integer, 21] [id, c, 21] [semi, ;, 21] 

[public, public, 23] [id, build, 23] [lpar, (, 23] [integer, integer, 23] [id, A, 23] [comma, ,, 23] [integer, integer, 23] [id, B, 23] [comma, ,, 23] [integer, integer, 23] [id, C, 23] [rpar, ), 23] [colon, :, 23] [id, QUADRATIC, 23] [semi, ;, 23] 
[public, public, 24] [id, evaluate, 24] [lpar, (, 24] [integer, integer, 24] [id, x, 24] [rpar, ), 24] [colon, :, 24] [integer, integer, 24] [semi, ;, 24] 
[rcurbr, }, 25] [semi, ;, 25] 

[inlinecmnt, // ====== Function Definitions ====== //, 27] 
[id, POLYNOMIAL, 28] [sr, ::, 28] [id, evaluate1, 28] [lpar, (, 28] [integer, integer, 28] [id, x, 28] [comma, ,, 28] [integer, integer, 28] [id, y, 28] [rpar, ), 28] [colon, :, 28] [integer, integer, 28] 
[do, do, 29] 
[return, return, 30] [lpar, (, 30] [intnum, 0, 30] [rpar, ), 30] [semi, ;, 30] 
[inlinecmnt, //    return(0.0);, 31] 
[end, end, 32] 

[id, LINEAR, 34] [sr, ::, 34] [id, evaluate, 34] [lpar, (, 34] [integer, integer, 34] [id, x, 34] [rpar, ), 34] [colon, :, 34] [integer, integer, 34] 
[local, local, 35] 
[integer, integer, 36] [id, result, 36] [semi, ;, 36] 
[do, do, 37] 
[id, result, 38] [equal, =, 38] [intnum, 0, 38] [semi, ;, 38] 
[id, result, 39] [equal, =, 39] [id, a, 39] [mult, *, 39] [id, x, 39] [plus, +, 39] [id, b, 39] [semi, ;, 39] 
[return, return, 40] [lpar, (, 40] [id, result, 40] [rpar, ), 40] [semi, ;, 40] 
[end, end, 41] 

[id, QUADRATIC, 43] [sr, ::, 43] [id, evaluate, 43] [lpar, (, 43] [integer, integer, 43] [id, x, 43] [rpar, ), 43] [colon, :, 43] [integer, integer, 43] 
[local, local, 44] 
[integer, integer, 45] [id, result, 45] [semi, ;, 45] 
[do, do, 46] [inlinecmnt, //Using Horner's method, 46] 
[id, result, 47] [equal, =, 47] [id, a, 47] [semi, ;, 47] 
[id, result, 48] [equal, =, 48] [id, result, 48] [mult, *, 48] [id, x, 48] [plus, +, 48] [id, b, 48] [semi, ;, 48] 
[id, result, 49] [equal, =, 49] [id, result, 49] [mult, *, 49] [id, x, 49] [plus, +, 49] [id, c, 49] [semi, ;, 49] 
[return, return, 50] [lpar, (, 50] [id, result, 50] [rpar, ), 50] [semi, ;, 50] 
[end, end, 51] 


[blockcmnt, /* sort the array */, 54] 
[id, bubbleSort, 55] [lpar, (, 55] [integer, integer, 55] [id, arr, 55] [lsqbr, [, 55] [rsqbr, ], 55] [comma, ,, 55] [integer, integer, 55] [id, size, 55] [rpar, ), 55] [colon, :, 55] [void, void, 55] 
[local, local, 56] 
[integer, integer, 57] [id, n, 57] [semi, ;, 57] 
[integer, integer, 58] [id, i, 58] [semi, ;, 58] 
[integer, integer, 59] [id, j, 59] [semi, ;, 59] 
[integer, integer, 60] [id, temp, 60] [semi, ;, 60] 
[do, do, 61] 
[id, n, 62] [equal, =, 62] [id, size, 62] [semi, ;, 62] 
[id, i, 63] [equal, =, 63] [intnum, 0, 63] [semi, ;, 63] 
[id, j, 64] [equal, =, 64] [intnum, 0, 64] [semi, ;, 64] 
[id, temp, 65] [equal, =, 65] [intnum, 0, 65] [semi, ;, 65] 
[while, while, 66] [lpar, (, 66] [id, i, 66] [lessthan, <, 66] [id, n, 66] [minus, -, 66] [intnum, 1, 66] [rpar, ), 66] 
[do, do, 67] 
[while, while, 68] [lpar, (, 68] [id, j, 68] [lessthan, <, 68] [id, n, 68] [minus, -, 68] [id, i, 68] [minus, -, 68] [intnum, 1, 68] [rpar, ), 68] 
[do, do, 69] 
[if, if, 70] [lpar, (, 70] [id, arr, 70] [lsqbr, [, 70] [id, j, 70] [rsqbr, ], 70] [gt, >, 70] [id, arr, 70] [lsqbr, [, 70] [id, j, 70] [plus, +, 70] [intnum, 1, 70] [rsqbr, ], 70] [rpar, ), 70] 
[then, then, 71] 
[do, do, 72] 
[inlinecmnt, // swap temp and arr[i], 73] 
[id, temp, 74] [equal, =, 74] [id, arr, 74] [lsqbr, [, 74] [id, j, 74] [rsqbr, ], 74] [semi, ;, 74] 
[id, arr, 75] [lsqbr, [, 75] [id, j, 75] [rsqbr, ], 75] [equal, =, 75] [id, arr, 75] [lsqbr, [, 75] [id, j, 75] [plus, +, 75] [intnum, 1, 75] [rsqbr, ], 75] [semi, ;, 75] 
[id, arr, 76] [lsqbr, [, 76] [id, j, 76] [plus, +, 76] [intnum, 1, 76] [rsqbr, ], 76] [equal, =, 76] [id, temp, 76] [semi, ;, 76] 
[end, end, 77] 
[else, else, 78] 
[semi, ;, 79] 
[id, j, 80] [equal, =, 80] [id, j, 80] [plus, +, 80] [intnum, 1, 80] [semi, ;, 80] 
[end, end, 81] [semi, ;, 81] 
[id, i, 82] [equal, =, 82] [id, i, 82] [plus, +, 82] [intnum, 1, 82] [semi, ;, 82] 
[end, end, 83] [semi, ;, 83] 
[end, end, 84] 


[blockcmnt, /* Print the array\nprintArray(integer arr[], integer size) : void\n  local\n    integer n;\n    integer i;\n  do\n    n = size;\n    i = 0;\n    while (i<n)\n      do\n        write(arr[i]);\n        i = i+1;\n      end;\n  end\n*/, 87] 

[blockcmnt, /* Print the array */, 89] 
[id, printArray, 90] [lpar, (, 90] [integer, integer, 90] [id, arr, 90] [comma, ,, 90] [integer, integer, 90] [id, size, 90] [rpar, ), 90] [colon, :, 90] [void, void, 90] 
[local, local, 91] 
[integer, integer, 92] [id, i, 92] [semi, ;, 92] 
[do, do, 93] 
[id, i, 94] [equal, =, 94] [intnum, 0, 94] [semi, ;, 94] 
[write, write, 95] [lpar, (, 95] [id, i, 95] [rpar, ), 95] [semi, ;, 95] 
[end, end, 96] 


[inlinecmnt, // ====== main ====== //, 99] 
[main, main, 100] 
[local, local, 101] 
[integer, integer, 102] [id, x, 102] [semi, ;, 102] 

[do, do, 104] 
[id, printArray, 105] [lpar, (, 105] [intnum, 2, 105] [comma, ,, 105] [intnum, 3, 105] [rpar, ), 105] 
[id, x, 106] [equal, =, 106] [intnum, 1, 106] [semi, ;, 106] 
[inlinecmnt, //    a=5;, 107] 
[if, if, 108] [lpar, (, 108] [id, x, 108] [eq, ==, 108] [intnum, 2, 108] [rpar, ), 108] 
[then, then, 109] 
[write, write, 110] [lpar, (, 110] [id, x, 110] [plus, +, 110] [intnum, 1, 110] [rpar, ), 110] [semi, ;, 110] 
[else, else, 111] 
[write, write, 112] [lpar, (, 112] [id, x, 112] [minus, -, 112] [intnum, 1, 112] [rpar, ), 112] [semi, ;, 112] 
[semi, ;, 113] 
[end, end, 114] 